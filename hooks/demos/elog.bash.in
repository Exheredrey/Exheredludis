#!/bin/bash
# vim: set et sw=4 sts=4 :

# This hook makes Paludis store messages generated by an ebuild in a file.
# These stored messages are then displayed to the user after a merge. To enable
# this functionality, this script should be copied or symlinked into:
#
#     @DATADIR@/paludis/hooks/elog/
#     @DATADIR@/paludis/hooks/install_all_pre/
#     @DATADIR@/paludis/hooks/install_all_post/
#     @DATADIR@/paludis/hooks/install_fail/
#     @DATADIR@/paludis/hooks/uninstall_all_pre/
#     @DATADIR@/paludis/hooks/uninstall_all_post/
#     @DATADIR@/paludis/hooks/uninstall_fail/
#
# And optionally:
#
#     @DATADIR@/paludis/hooks/einfo/
#     @DATADIR@/paludis/hooks/ewarn/
#     @DATADIR@/paludis/hooks/eerror/
#
# You should ensure that it has execute permissions.

source ${PALUDIS_EBUILD_DIR}/echo_functions.bash

logfile="${PALUDIS_HOOKS_TMPDIR:-${ROOT}/var/tmp/paludis}/elog.${PALUDIS_PID}"

case "${HOOK}" in
    elog)
    echo "L ${CATEGORY}/${PF} ${MESSAGE}" >> "${logfile}"
    ;;

    einfo)
    echo "I ${CATEGORY}/${PF} ${MESSAGE}" >> "${logfile}"
    ;;

    ewarn)
    echo "W ${CATEGORY}/${PF} ${MESSAGE}" >> "${logfile}"
    ;;

    eerror)
    echo "E ${CATEGORY}/${PF} ${MESSAGE}" >> "${logfile}"
    ;;

    install_all_pre|uninstall_all_pre)
    rm -f "${logfile}"
    touch "${logfile}" || die "Couldn't create '${logfile}' for elog hooks"
    ;;

    install_all_post|uninstall_all_post|install_fail|uninstall_fail)
    echo
    old_pf=""
    while read line ; do
        line_status=$(echo ${line} | cut -d' ' -f1 )
        line_pf=$(echo ${line} | cut -d' ' -f2 )
        line_message=$(echo ${line} | cut -d' ' -f3- )

        if [[ "${old_pf}" != "${line_pf}" ]] ; then
            echo
            echo "${COLOUR_GOOD}Summary of messages from ${line_pf}:${COLOUR_NORMAL}"
            echo
            old_pf="${line_pf}"
        fi

        case "${line_status}" in
            L|I)
            echo -ne " ${COLOUR_GOOD}*${COLOUR_NORMAL} "
            ;;

            W)
            echo -ne " ${COLOUR_WARN}*${COLOUR_NORMAL} "
            ;;

            E)
            echo -ne " ${COLOUR_BAD}*${COLOUR_NORMAL} "
            ;;
        esac
        echo "${line_message}"

    done <"${logfile}"

    rm -f "${logfile}"
    ;;

    *)
    paludis_ecmd \
        "ewarn" \
        "" \
        "`echo -ne " ${COLOUR_WARN}*${COLOUR_NORMAL} "`" \
        "elog.bash doesn't know what to do for HOOK=\"${HOOK}\""
    ;;
esac

