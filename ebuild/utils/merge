#!/bin/bash
# vim: set sw=4 sts=4 et :

# Copyright (c) 2006 Ciaran McCreesh <ciaran.mccreesh@blueyonder.co.uk>
#
# This file is part of the Paludis package manager. Paludis is free software;
# you can redistribute it and/or modify it under the terms of the GNU General
# Public License as published by the Free Software Foundation; either version
# 2 of the License, or (at your option) any later version.
#
# Paludis is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA  02111-1307  USA

source ${PALUDIS_EBUILD_DIR}/echo_functions.bash

if [[ -z "${1}" ]] || [[ -z "${2}" ]] ; then
    echo "usage: ${0} from to contents"
    exit 247
fi

shopt -s dotglob
shopt -s nullglob

src=$(readlink -f "${1%/}/" )
src="${src//+(\/)/\/}"
export top_src="${src}"
dst=$(readlink -f "${2%/}/" )
dst="${dst//+(\/)/\/}"
export top_dst="${dst}"
export contents=${3}

if [[ ! -d ${src} ]] ; then
    echo "${src}: not a directory; aborting" >&2
    exit 247
fi

if [[ ! -d ${dst} ]] ; then
    echo "${dst}: not a directory; aborting" >&2
    exit 247
fi

if ! > "${contents}" ; then
    echo "${contents}: can't create; aborting" >&2
    exit 247
fi

make_cfgpro_filename()
{
    local fn="$(basename ${1})" i=0
    while [[ -e "${2}/${fn}" &&
            "$(md5sum "${2}/${fn}" |cut -d\  -f 1)" != "$(md5sum "${1}" |cut -d\  -f 1)" ]]; do
        fn="._cfg$(printf '%.4i' ${i})_$(basename ${1})"
        (( ++i ))
    done
    echo ${fn}
}

merge_this()
{
    if [[ ! -d "${1}" ]] || [[ ! -d "${2}" ]] ; then
        echo "merge_this called with bad parameters '${1}' '${2}'" >&2
        exit 247
    fi

    local f ff r=0
    for f in "${1}/"* ; do

        ff=$(basename -- "${f}" )
        echo ">>> ${2#${top_dst}}/${ff}"

        if [[ -e "${f}" ]] || [[ -h "${f}" ]] ; then
            if [[ -L "${2}/${ff}" ]] ; then
                if ! [[ -L "${f}" ]] ; then
                    ebuild_notice "qa" "ROOT has '${2}/${ff}' as a non-symlink, " \
                        "but IMAGE '${f}' is a symlink"
                fi
            elif [[ -L "${f}" ]] ; then
                ebuild_notice "qa" "ROOT has '${2}/${ff}' as a symlink, " \
                    "but IMAGE '${f}' is a non-symlink"
            fi
        fi

        if [[ -L "${f}" ]] ; then
            if ( [[ -e "${2}/${ff}" ]] || [[ -h "${2}/${ff}" ]] ) && ! rm -f -- "${2}/${ff}" ; then
                echo "error removing ${2}/${ff} for link ${f}"
                r=1
            elif ! ln -s -- "$(readlink -- ${f} )" "${2}/${ff}" ; then
                echo "error installing link ${f}"
                r=1
            else
                echo -n "sym ${2#${top_dst}}/${ff} -> " >> ${contents}
                echo -n "$(readlink -- ${2}/${ff} ) " >> ${contents}
                echo -n "$(stat -c '%Y' -- ${2}/${ff} )" >> ${contents}
                echo >> ${contents}
            fi
            hash -r
        elif [[ -d ${f} ]] ; then
            local ok=
            if [[ -d "${2}/${ff}"/ ]] ; then
                :
            elif ! mkdir -- "${2}/${ff}" ; then
                echo "error installing directory ${f}"
                ok=no
            fi

            if [[ -z "${ok}" ]] ; then
                echo "dir ${2#${top_dst}}/${ff}" >> ${contents}
                if ! merge_this "${1}/${ff}" "${2}/${ff}" ; then
                    echo "error installing directory contents ${f}"
                    r=1
                fi
            else
                r=1
            fi
        else
            local cfgpro=
            for c in ${CONFIG_PROTECT}; do
                if [[ ${2#${top_dst}} == "${c%/}/"* ]]; then
                    cfgpro=yes
                    for cm in ${CONFIG_PROTECT_MASK}; do
                        if [[ ${2#${top_dst}} == "${cm%/}/"* ]]; then
                            cfgpro=
                        fi
                    done
                fi
            done
            local fn=${f}
            if [[ -n ${cfgpro} &&
                    -e ${2}/${ff} &&
                    "$(md5sum ${f} |cut -d\  -f 1)" != "$(md5sum ${2}/${ff} |cut -d\  -f 1)" ]]; then
                fn="${1}/$(make_cfgpro_filename ${f} ${2})"
                if [[ ${fn} != ${f} ]]; then
                    mv "${f}" "${fn}"
                fi
            fi
            if ! cp -pR --remove-destination --no-preserve=timestamps \
                    -- "${fn}" "${2}"/ ; then
                echo "error installing file ${fn}"
                r=1
            else
                if [[ -f "${fn}" ]] ; then
                    echo -n "obj ${2#${top_dst}}/${ff} " >> ${contents}
                    echo -n "$(md5sum -- ${2}/${ff} | cut -d' ' -f1 ) " >> ${contents}
                    echo -n "$(stat -c '%Y' -- ${2}/${ff} )" >> ${contents}
                    echo >> ${contents}
                else
                    echo "misc ${2#${top_dst}}/${ff}" >> ${contents}
                fi
            fi
        fi
    done

    return $r
}

merge_this "${src}" "${dst}"

