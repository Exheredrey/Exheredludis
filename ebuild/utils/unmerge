#!/bin/bash
# vim: set sw=4 sts=4 et :

# Copyright (c) 2006 Ciaran McCreesh <ciaran.mccreesh@blueyonder.co.uk>
#
# This file is part of the Paludis package manager. Paludis is free software;
# you can redistribute it and/or modify it under the terms of the GNU General
# Public License as published by the Free Software Foundation; either version
# 2 of the License, or (at your option) any later version.
#
# Paludis is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA  02111-1307  USA

source ${PALUDIS_EBUILD_DIR}/echo_functions.bash

if [[ -z "${1}" ]] || [[ -z "${2}" ]] ; then
    echo "usage: ${0} from contents"
    exit 247
fi

shopt -s dotglob
shopt -s nullglob

ROOT=$(readlink -f "${1%+(/)}/" )
export ROOT
export contents=${2}

if [[ ! -d ${ROOT} ]] ; then
    echo "${ROOT}: not a directory; aborting" >&2
    exit 247
fi

if [[ ! -f "${contents}" ]] ; then
    echo "${contents}: not a file; aborting" >&2
    exit 247
fi

sort -r -t ' ' -k 2 < "${contents}" | \
while read entry ; do
    [[ -z "${entry}" ]] && continue
    items=( ${entry} )
    case ${items[0]} in
        dir)
            ;;

        sym)
            if ! [[ -L "${ROOT}/${items[1]}" ]] ; then
                echo "skip  !type  ${items[1]}"
            elif [[ $(readlink -- "${ROOT}/${items[1]}" ) != "${items[3]}" ]] ; then
                echo "skip  !dest  ${items[1]}"
            elif [[ $(stat -c '%Y' -- "${ROOT}/${items[1]}" ) != "${items[4]}" ]] ; then
                echo "skip  !time  ${items[1]}"
            else
                echo "remove       ${items[1]}"
                rm -f -- "${ROOT}/${items[1]}"
            fi
            ;;

        obj)
            if ! [[ -f "${ROOT}/${items[1]}" ]] ; then
                echo "skip  !type  ${items[1]}"
            elif [[ $(md5sum -- "${ROOT}/${items[1]}" | cut -d' ' -f1 ) != "${items[2]}" ]] ; then
                echo "skip  !md5   ${items[1]}"
            elif [[ $(stat -c '%Y' -- "${ROOT}/${items[1]}" ) != "${items[3]}" ]] ; then
                echo "skip  !time  ${items[1]}"
            else
                cfgpro=
                for c in ${CONFIG_PROTECT}; do
                    if [[ ${items[1]} == "${c%/}"/* ]]; then
                        cfgpro="yes"
                        for cm in ${CONFIG_PROTECT_MASK}; do
                            if [[ ${items[1]} == "${cm%/}"/* ]]; then
                                cfgpro=
                            fi
                        done
                    fi
                done
                if [[ -n ${cfgpro} ]]; then
                    echo "cfgpro       ${items[1]}"
                else
                    echo "remove       ${items[1]}"
                    rm -f "${ROOT}/${items[1]}"
                fi
            fi
            ;;

        misc)
            if [[ -f "${ROOT}/${items[1]}" ]] ; then
                echo "skip  !type  ${items[1]}"
            elif [[ $(stat -c '%Y' -- "${ROOT}/${items[1]}" ) != "${items[2]}" ]] ; then
                echo "skip  !time  ${items[1]}"
            else
                echo "remove       ${items[1]}"
                rm -f "${ROOT}/${items[1]}"
            fi
            ;;

        *)
            die "Unknown VDB entry kind '${kind}'"
            ;;
    esac
done

sort -r -t ' ' -k 2 < "${contents}" | \
while read entry ; do
    [[ -z "${entry}" ]] && continue
    items=( ${entry} )
    case ${items[0]} in
        dir)
            if ! [[ -d "${ROOT}/${items[1]}" ]] ; then
                echo "skip  !type  ${items[1]}"
            elif [[ $(echo "${ROOT}/${items[1]}"/* ) != "${ROOT}/${items[1]}/*" ]] ; then
                echo "skip  !empty ${items[1]}"
            else
                echo "remove       ${items[1]}"
                rm -fr -- "${ROOT}/${items[1]}"
            fi
            ;;
    esac
done

