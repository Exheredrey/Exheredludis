# vim: ft=automake :

CLEANFILES = *~ gmon.out *.gcov *.gcno  *.gcda *.loT *.epicfail
MAINTAINERCLEANFILES = Makefile.in
AUTOMAKE_OPTIONS = 1.11 parallel-tests

LOG_COMPILER = \
	unset PALUDIS_TESTS_REAL_STDOUT_FD 2>&1 >/dev/null ; \
	test "x$$BASH_VERSION" == x || eval "exec 3<&1 ; export PALUDIS_TESTS_REAL_STDOUT_FD=3" ; \
	env \
		ACCERSO_OPTIONS="" \
		ADJUTRIX_OPTIONS="" \
		APPAREO_OPTIONS="" \
		CAVE_FORMATS_CONF="/dev/null" \
		CAVE_COMMANDS_PATH="" \
		CAVE_OPTIONS="" \
		CAVE_CONFIG_OPTIONS="" \
		CAVE_CONTENTS_OPTIONS="" \
		CAVE_DISPLAY_RESOLUTION_OPTIONS="" \
		CAVE_EXECUTE_RESOLUTION_OPTIONS="" \
		CAVE_FIND_CANDIDATES_OPTIONS="" \
		CAVE_FIX_CACHE_OPTIONS="" \
		CAVE_FIX_LINKAGE_OPTIONS="" \
		CAVE_HELP_OPTIONS="" \
		CAVE_IMPORT_OPTIONS="" \
		CAVE_INFO_OPTIONS="" \
		CAVE_MATCH_OPTIONS="" \
		CAVE_PERFORM_OPTIONS="" \
		CAVE_PRINT_CATEGORIES_OPTIONS="" \
		CAVE_PRINT_COMMANDS_OPTIONS="" \
		CAVE_PRINT_ENVIRONMENT_METADATA_OPTIONS="" \
		CAVE_PRINT_ID_CONTENTS_OPTIONS="" \
		CAVE_PRINT_ID_EXECUTABLES_OPTIONS="" \
		CAVE_PRINT_ID_METADATA_OPTIONS="" \
		CAVE_PRINT_IDS_OPTIONS="" \
		CAVE_PRINT_OWNERS_OPTIONS="" \
		CAVE_PRINT_PACKAGES_OPTIONS="" \
		CAVE_PRINT_REPOSITORIES_OPTIONS="" \
		CAVE_PRINT_REPOSITORY_FORMATS_OPTIONS="" \
		CAVE_PRINT_SETS_OPTIONS="" \
		CAVE_PRINT_SYNC_PROTOCOLS_OPTIONS="" \
		CAVE_PURGE_OPTIONS="" \
		CAVE_RESOLVE_OPTIONS="" \
		CAVE_RESUME_OPTIONS="" \
		CAVE_SEARCH_OPTIONS="" \
		CAVE_SHOW_OPTIONS="" \
		CAVE_SYNC_OPTIONS="" \
		CAVE_UNINSTALL_OPTIONS="" \
		CAVE_UPDATE_WORLD_OPTIONS="" \
		CRAN_BASH_DIR="$(top_srcdir)/paludis/repositories/cran/cran/" \
		INQUISITIO_OPTIONS="" \
		LD_LIBRARY_PATH="`echo $$LD_LIBRARY_PATH: | sed -e 's,^:,,'`` \
			$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_builddir)/paludis/.libs/ \
			`:`$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_builddir)/paludis/util/.libs/ \
			`:`$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_builddir)/ruby/.libs/ \
			`:`$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_builddir)/python/.libs/ \
			`:`$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_builddir)/paludis/repositories/e/.libs/`" \
		PALUDIS_BYPASS_USERPRIV_CHECKS="yes" \
		PALUDIS_COMMAND="$(top_builddir)/src/clients/paludis/paludis" \
		PALUDIS_DEFAULT_OUTPUT_CONF="`$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_srcdir)/paludis/environments/paludis/tests_output.conf`" \
		PALUDIS_DISTRIBUTION="gentoo" \
		PALUDIS_DISTRIBUTIONS_DIR="$(top_srcdir)/paludis/distributions/" \
		PALUDIS_EAPIS_DIR="$(top_srcdir)/paludis/repositories/e/eapis/" \
		PALUDIS_EBUILD_DIR="`$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_srcdir)/paludis/repositories/e/ebuild/`" \
		PALUDIS_EBUILD_DIR_FALLBACK="`$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_builddir)/paludis/repositories/e/ebuild/`" \
		PALUDIS_ECHO_FUNCTIONS_DIR="`$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_builddir)/paludis/util/`" \
		PALUDIS_ENABLE_VIRTUALS_REPOSITORY="$(PALUDIS_ENABLE_VIRTUALS_REPOSITORY_VALUE)" \
		PALUDIS_EXTRA_EBUILD_MODULES_DIRS="`$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_builddir)/paludis/util/`" \
		PALUDIS_FETCHERS_DIR="$(top_srcdir)/paludis/fetchers/" \
		PALUDIS_FAILURE_IS_FATAL="" \
		PALUDIS_FAILURE_IS_NONFATAL="" \
		PALUDIS_GEMS_DIR="`$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_srcdir)/paludis/repositories/gems/`" \
		PALUDIS_HOOKER_DIR="$(top_srcdir)/paludis/" \
		PALUDIS_NO_CHOWN="yupyup" \
		PALUDIS_NO_GLOBAL_HOOKS="yes" \
		PALUDIS_NO_XML= \
		PALUDIS_NO_XTERM_TITLES="yes" \
		PALUDIS_OPTIONS="" \
		PALUDIS_OUTPUT_MANAGERS_DIR="`$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_srcdir)/paludis/environments/paludis/output_managers/`" \
		PALUDIS_OUTPUTWRAPPER_DIR="`$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_builddir)/paludis/util/`" \
		PALUDIS_PC_SLOT=@PALUDIS_PC_SLOT@ \
		PALUDIS_PIPE_COMMAND_READ_FD="" \
		PALUDIS_PIPE_COMMAND_WRITE_FD="" \
		PALUDIS_PORTAGE_BASHRC="$(top_srcdir)/paludis/environments/portage/bashrc" \
		PALUDIS_PORTAGE_BASHRC="$(top_srcdir)/paludis/environments/portage/bashrc" \
		PALUDIS_PYTHON_DIR="$(top_srcdir)/python/" \
		PALUDIS_REDUCED_USERNAME="`id -un`" \
		PALUDIS_SKIP_CONFIG="yes" \
		PALUDIS_SUFFIXES_FILE="$(top_srcdir)/paludis/repositories/e/ebuild_entries_suffixes.conf" \
		PALUDIS_SYNCERS_DIR="$(top_srcdir)/paludis/syncers/" \
		PALUDIS_TMPDIR="`pwd`" \
		PATH="${PATH}:/sbin:/usr/sbin" \
		PYTHON="$(PYTHON)" \
		RUBY="$(RUBY)" \
		SO_SUFFIX=@VERSION_LIB_CURRENT@ \
		SYSCONFDIR="$(sysconfdir)" \
		PYTHONPATH="$(top_builddir)/python/:$(top_builddir)/python/.libs/" \
		TEST_SCRIPT_DIR="$(srcdir)/" \
		TOP_SRCDIR="`$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_srcdir)`" \
		TOP_BUILDDIR="`$(top_srcdir)/paludis/repositories/e/ebuild/utils/canonicalise $(top_builddir)`" \
		$(LOG_COMPILER_EXTRA) \
		bash $(top_srcdir)/test/run_test.sh $(LOG_COMPILER_INTERP)

built-sources : $(BUILT_SOURCES)
	for s in `echo $(SUBDIRS) | tr -d .` ; do $(MAKE) -C $$s built-sources || exit 1 ; done

