/* vim: set ft=cpp tw=80 sw=4 et : */

/**
\page ConfigurationFiles Configuration Files

\section ConfigurationFilesOverview Overview

This document explains where Paludis looks for user configuration files, and
describes the format of these files.

\section ConfigurationFilesGeneralFormat General File Format

Except where otherwise noted, configuration files are plain text files where
blank lines and lines starting with optional whitespace followed by a hash
symbol are ignored.

Many files use a key = value format. Here, any whitespace around the outside
of key and value is stripped. The value may be quoted using single or double
quotes. Variable expansion on previously defined keys (and sometimes on
predefined special values) may be done using <code>${variable}</code>. To
include a literal dollar, use <code>\$</code>.

\section ConfigurationFilesLocations Locations

Paludis tries the following locations for its configuration directory:

- <code>${PALUDIS_HOME}/.paludis/</code>, if the <code>PALUDIS_HOME</code>
  environment variable is set, or <code>${HOME}/.paludis/</code> otherwise.
- <code>SYSCONFDIR/paludis/</code>, where <code>SYSCONFDIR</code> is
  <code>/etc</code> on most systems.

If the <code>--config-suffix</code> commandline argument is supplied, Paludis
will use <code>.paludis-thesuffix</code> or <code>paludis-thesuffix</code>
instead.

If a file named <code>specpath</code> exists in this directory, Paludis uses
this file to determine the real configuration directory. The <code>specpath</code>
file is a standard key / value configuration file (see above). The keys that
are used are:

- <code>root</code>, which specifies the install root for packages and the
  real configuration directory, which is <code>${root}/SYSCONFDIR/paludis/</code>
  (note that the HOME values are <em>not</em> used here). This value is set in
  <code>specpath</code> rather than the real configuration directory so
  that chrooting into an image can work with no configuration changes.
- <code>config-suffix</code>, which specifies a new configuration suffix. By
  default, no configuration suffix is used under root.

If no <code>specpath</code> file is present, the original directory is used.

\section ConfigurationFilesUseConf The use.conf File

User <code>USE</code> preferences are controlled by the <code>use.conf</code>
file. The basic format of a line is <code>atom use use use ...</code>, where
<code>atom</code> is a package depend atom or <code>*</code> for "all packages",
and <code>use use use ...</code> is one or more USE flag names, prefixed by
a minus if they are to be disabled.

For <code>USE_EXPAND</code> variables such as <code>LINGUAS</code> and
<code>VIDEO_CARDS</code>, <code>atom VARIABLE: value value ...</code>
should be used.

\verbatim
# By default, apply these to all packages
* -doc nls -apache2

# Turn off nls for vim
app-editors/vim -nls

# For gvim 7, turn on and off various interpreters
>=app-editors/gvim-7_alpha mzscheme perl -python ruby

# For gtk+ with SLOT=2, enable tiff support
x11-libs/gtk+:2 tiff

# We like English
* LINGUAS: en_GB en
\endverbatim

Note that if a package matches multiple lines, <em>all</em> of these lines will
be considered, not just the best or last match.

\section ConfigurationFilesKeywordsConf The keywords.conf File

Which <code>KEYWORDS</code> to accept is controlled through
<code>keywords.conf</code>. The format of a line is
<code>atom keyword ...</code>. As with Portage, accepting
<code>~arch</code> does <em>not</em> implicitly accept <code>arch</code>.
For example:

\verbatim
# We want a mostly stable system:
* x86

# But some ~arch packages:
dev-cpp/libebt x86 ~x86
sys-apps/paludis x86 ~x86
dev-util/subversion x86 ~x86
app-admin/eselect x86 ~x86
app-editors/vim x86 ~x86
app-editors/vim-core x86 ~x86
\endverbatim

Note that if a package matches multiple lines, <em>all</em> of these lines will
be considered, not just the best or last match.

\section ConfigurationFilesLicensesConf The licenses.conf File

Licence filtering can be controlled via <code>licenses.conf</code>. If no
filtering is desired, use:

\verbatim
* *
\endverbatim

For filtering, the format is similar to the keywords and use files:

\verbatim
* GPL-2 BSD
app-editors/vim-core vim
\endverbatim

*/


