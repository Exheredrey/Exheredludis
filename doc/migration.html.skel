<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en">
<head>
<title>Paludis, the Other Package Mangler</title>
<link rel="stylesheet" href="paludis.css" type="text/css" />
</head>
<body>
@HEADER@

<h1>Paludis, the Other Package Mangler</h1>

<h2>Migrating to Paludis</h2>

<p>There are two methods you can follow to migrate from Portage to Paludis: the
<a href="#manual">manual method</a> or the <a href="#automated">automated
    method</a>. Also, it is now usually possible to migrate <a
    href="#coward">from Paludis back to Portage</a>.</p>

<p><strong>Warning:</strong> Migration is not always entirely reliable. If
you've had an install for a long time, chances are your system contains a fair
amount of cruft generated by buggy Portage versions. You may need to fix this
manually.</p>

<p>No matter which method you plan to use, start by installing Paludis. There
are ebuilds in the tree, or you can get SVN ebuilds (which Portage can't use)
from <a href="http://paludis.pioto.org/trac/browser/overlay/">the Paludis
    overlay</a>.  If you don't like the <code>libxml2</code> and
<code>pcre++</code> dependencies, turn off the <code>qa</code> USE flag.
<strong>Make sure you are using at least version 0.14</strong> when following
this guide.</p>

<h3 id="automated">How to Migrate from Portage to Paludis (the automated
    method)</h3>

The easiest way to migrate your configuration from Portage to Paludis is by
using the <a href="http://paludis.pioto.org/trac/browser/scratch/scripts/portage2paludis.bash?format=raw">portage2paludis.bash</a> script, available via subversion. It is invoked as follows:

<pre>
$ sudo ./portage2paludis.bash
</pre>

<p>A few notes on the migration script. The target configuration directory <b>must not exist</b>,
or the script will bail out. This is to prevent it from clobbering an existing
paludis config. Also, the script will not migrate your customized portage
bashrc -- this is something you will have to do on your own.</p>

<p>The script will migrate your <code>PORTDIR_OVERLAYS</code> to Paludis as best as
possible. Finally, the script
will first try to name your repositories what their profiles/repo_name file
says they should be called and, if that fails, they will be called what their
top level directory is called (so, /usr/local/portage is called "portage"). If
any name collisions occur, the script will terminate, and you will have to
finish configuring your overlays on your own.</p>

<p>Now, try:</p>

<pre>
sudo paludis --sync
paludis -pi world
</pre>

<p>You will likely find that it picks up a few packages that Portage wouldn't. This
is to be expected -- the Paludis dependency resolver is considerably more complete
than the Portage one, and it will try to enforce runtime dependencies of already
installed packages. In particular, this means that if you have any packages
installed that have a <code>virtual/x11</code> runtime dependency, the virtual will
be pulled in.</p>

<p>You may encounter some nasty error messages, especially if you're running an old
install and have some packages that were installed a very long time ago with a
broken Portage release. In most cases, removing the VDB entry by hand and then
immediately reinstalling the same version of the package using Paludis (or even
a recent Portage) will suffice.</p>

<h3 id="#manual">How to Migrate from Portage to Paludis (the manual method)</h3>

<p>First, make some configuration files. For full details, see <a
    href="configuration.html">the configuration files documentation</a>.
For a quick template:</p>

<pre>
mkdir -p /etc/paludis/repositories

cat &lt;&lt;"END" &gt; /etc/paludis/keywords.conf
*/*                 x86
dev-cpp/libebt      x86 ~x86
sys-apps/paludis    x86 ~x86
dev-util/subversion x86 ~x86
app-admin/eselect   x86 ~x86
sys-fs/udev         x86 ~x86
END

cat &lt;&lt;"END" &gt; /etc/paludis/use.conf
*/* -doc nls -apache2
*/* LINGUAS: en
*/* INPUT_DEVICES: keyboard mouse
*/* VIDEO_CARDS: -* ati
app-editors/vim -nls
END

cat &lt;&lt;"END" &gt; /etc/paludis/licenses.conf
*/* *
END

cat &lt;&lt;"END" &gt; /etc/paludis/mirrors.conf
gentoo http://gentoo.blueyonder.co.uk/distfiles/
gnu http://gnu.blueyonder.co.uk/
debian http://debian.blueyonder.co.uk/
END
</pre>

<p>Set up your <code>bashrc</code>. This must <b>NOT</b> be used to change any
values that affect dependency resolution (e.g. <code>USE</code>,
<code>LINGUAS</code>). It can be used to set <code>CFLAGS</code>,
<code>CHOST</code> and the like (on some archs you'll have to do this to
avoid getting junk from your profile).</p>

<pre>
cat &lt;&lt;"END" &gt; /etc/paludis/bashrc
CFLAGS="-O2 -march=pentium4 -fomit-frame-pointer"
CXXFLAGS="${CFLAGS}"
CHOST="i686-pc-linux-gnu"
MAKEOPTS="-j2"
END
</pre>

<p>Set up your repository files. Do not tinker with the VDB location, it
<b>must</b> go in <code>${ROOT}/var/db/pkg</code>. Here we'll avoid using
<code>/usr/portage</code> for the main tree because sticking data that gets
changed on <code>/usr</code> is silly.</p>

<p>You will also need to specify <code>names_cache</code> for the ebuild format
repositories and <code>provides_cache</code> for the VDB repositories.
See <a href="cachefiles.html">the cache documentation</a>.</p>

<pre>
cat &lt;&lt;"END" &gt; /etc/paludis/repositories/gentoo.conf
location = /var/paludis/repositories/gentoo/
sync = rsync://rsync.europe.gentoo.org/gentoo-portage/
profiles = /var/paludis/repositories/gentoo/profiles/default-linux/x86/2006.0
format = ebuild
END

cat &lt;&lt;"END" &gt; /etc/paludis/repositories/installed.conf
location = /var/db/pkg/
format = vdb
END

cat &lt;&lt;"END" &gt; /etc/paludis/repositories/paludis-overlay.conf
location = /var/paludis/repositories/paludis-overlay/
sync = svn://svn.pioto.org/paludis/overlay
cache = /var/empty
format = ebuild
master_repository = gentoo
END
</pre>

<p>The world file for Paludis lives in the VDB directory. For Portage compatibility,
a symlink can be used (but be careful when uninstalling Portage if you use this
route).</p>

<pre>
sudo ln -s /var/lib/portage/world /var/db/pkg/world
</pre>

<p>Now, try:</p>

<pre>
sudo paludis --sync
paludis -pi world
</pre>

<p>You will likely find that it picks up a few packages that Portage wouldn't. This
is to be expected -- the Paludis dependency resolver is considerably more complete
than the Portage one, and it will try to enforce runtime dependencies of already
installed packages. In particular, this means that if you have any packages
installed that have a <code>virtual/x11</code> runtime dependency, the virtual will
be pulled in.</p>

<p>You may encounter some nasty error messages, especially if you're running an old
install and have some packages that were installed a very long time ago with a
broken Portage release. In most cases, removing the VDB entry by hand and then
immediately reinstalling the same version of the package using Paludis (or even
a recent Portage) will suffice.</p>

<h3 id="#coward">How to Migrate from Paludis to Portage</h3>

<p>Start by uninstalling any packages that use <code>-scm</code> or
<code>-try</code>. Also <code>rm -fr</code> any <code>.cache</code> directories
created inside repository directories.</p>

<p>Finally <code>emerge --sync</code> (this is important) and you might be back to normal.
If you encounter weird failures when upgrading or uninstalling packages that were
installed by Paludis, removing the VDB entry by hand and then immediately
reinstalling the same version of the package using Portage will usually fix
things.</p>

@FOOTER@
</body>
</html>



