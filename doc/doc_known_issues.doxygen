/* vim: set ft=cpp tw=80 sw=4 et : */

/**
\page KnownIssues Known Issues and Non-Issues

\section KnownIssuesMain About the issues

This document describes some of the more commonly encountered problems, issues
and things that aren't bugs but might look like they are. Pestering anyone about
these is liable to get you hurt.

\section KnownIssuesMain About the non-issues

This document also describes some things that are not bugs or missing functionality. Pestering anyone about these is liable to get you hurt a lot.

\section KnownIssuesPackages Packages

\subsection KnownIssuesUdev sys-fs/udev

Problem: <code>sys-fs/udev</code> will fail at the merge stage.

Workaround: Use <code>~arch</code> for this package. We don't support merging
fancy things like device files. Neither does Portage, but Portage isn't well
behaved enough to error out on it either -- it just does something silly.

\subsection KnownIssuesKDE Some KDE libraries are broken on some amd64 profiles

Problem: Various KDE applications install libraries into the wrong libdir.

Workaround: Make sure you're running 0.6.1 or later.

Workaround: Check your profile. You can't use <code>default-linux/amd64/</code>
directly -- you have to use one of the release subdirectories. If this still
fails, someone who knows what they're doing needs to sit down and figure out
exactly what's going on for the profile in question.

\subsection KnownIssuesCheck Various packages fail src_test

Problem: Various packages fail <code>src_test</code>

Workaround: You can <code>export SKIP_FUNCTIONS="test"</code> to skip tests. This
is best done on a per-package basis via <code>bashrc</code>:

\verbatim
case "${PN}" in

    automake|glibc|e2fsprogs|neon|gettext|tar)
        export SKIP_FUNCTIONS=test
        ;;

esac
\endverbatim

Unfortunately not all package maintainers care about making their package's test
suite work. This is a nuisance, a) because it makes things much harder for arch
teams and b) because it makes it harder for users to catch bugs.

\subsection KnownIssuesRootSandbox Sandbox violations when ROOT!=/

Problem: Sandbox violations when ROOT!=/

Workaround: Paludis enforces ROOT. However, some packages don't honour ROOT. To
temporarily disable sandbox for these packages, <code>export SANDBOX_PREDICT=/</code> .

\section KnownNonIssuesPortageThings Things Portage Does

\subsection KnownNonIssuesWget wget Resume Support

Non-Problem: With Portage, <code>wget -c</code> is used to attempt to resume downloads of partial files. With Paludis, resumes are not allowed.

Rationale: This leads to corruption and wasted bandwidth far too frequently. In particular, if an error page that isn't recognised as a 404 is fetched from one server (this is common for <code>mirror://sourceforge/</code>), resume support means <code>wget</code> would then download all but the first few hundred bytes of the file from somewhere else, leading to a corrupt distfile notice only after lots of bandwidth has been wasted.

\subsection KnownNonIssesResume Resume / Skip First Support

Non-Problem: Paludis doesn't have an equivalent to --resume --skipfirst in Portage.

Rationale: Too unreliable, too flaky and far too widely abused; however, if an ebuild exits with an error, Paludis will echo a resume command (<code>paludis -i10 =sys-apps/foo-1.23-r1 =app-misc/fnord-2 ...</code>) that can be used to resume the build.

\subsection KnownNonIssuesNice Automatic Niceness Support

Non-Problem: There's no <code>PORTAGE_NICENESS</code> equivalent.

Rationale: Learn how to use <code>nice</code>. There's no <code>GCC_NICENESS</code> or <code>VIM_NICENESS</code>
either.

*/


