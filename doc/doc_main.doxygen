/* vim: set ft=cpp tw=80 sw=4 et : */

using namespace paludis;

/** \defgroup g_paludis Paludis
 *
 * Paludis public API.
 */

/** \defgroup g_about About
 *
 * \ingroup g_paludis
 *
 * Information about Paludis (version, build options etc).
 *
 * \section Examples
 *
 * - \ref example_about.cc "example_about.cc"
 */

/** \defgroup g_actions Actions
 *
 * \ingroup g_paludis
 *
 * Action-related classes are used to provide the information needed by a
 * PackageID to perform operations such as installing, uninstalling and fetching.
 *
 * \section Examples
 *
 * - \ref example_action.cc "example_action.cc"
 */

/** \defgroup g_contents Contents
 *
 * \ingroup g_paludis
 *
 * Contents heirarchies can be used to iterate over the content of an installed
 * or binary package.
 *
 * \section Examples
 *
 * - \ref example_contents.cc "example_contents.cc"
 */

/** \defgroup g_dep_spec Dependency specifications
 *
 * \ingroup g_paludis
 *
 * Dependency specification classes provide an abstraction representing
 * dependency and dependency-like (for example, SRC_URI, RESTRICT)
 * heirarchies.
 *
 * \section Examples
 *
 * - \ref example_dep_label.cc "example_dep_label.cc"
 * - \ref example_dep_spec.cc "example_dep_spec.cc"
 * - \ref example_dep_tag.cc "example_dep_tag.cc"
 * - \ref example_dep_tree.cc "example_dep_tree.cc"
 * - \ref example_dep_spec_flattener.cc "example_dep_spec_flattener.cc"
 */

/** \defgroup g_environment Environment
 *
 * \ingroup g_paludis
 *
 * An Environment subclass is the starting point for most programs. For programs
 * that use user configuration, EnvironmentMaker is used to obtain an instance.
 * For programs that operate without configuration, NoConfigEnvironment should
 * be used instead.
 *
 * \section Examples
 *
 * - \ref example_environment.cc "example_environment.cc"
 */

/** \defgroup g_exceptions Exceptions
 *
 * Exceptions and related utility classes.
 *
 * \ingroup g_paludis
 */

