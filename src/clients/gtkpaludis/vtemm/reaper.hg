/* vim: set sw=4 sts=4 et foldmethod=syntax : */

/*
 * Copyright (c) 2006 Piotr Rak <piotr.rak@gmail.com>
 *
 * This file is part of the Paludis package manager. Paludis is free software;
 * you can redistribute it and/or modify it under the terms of the GNU General
 * Public License version 2, as published by the Free Software Foundation.
 *
 * Paludis is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA  02111-1307  USA
 */

#include <sys/types.h>
#include <paludis/util/instantiation_policy.hh>
#include <paludis/util/private_implementation_pattern.hh>
#include <glibmm/object.h>
#include <sigc++/sigc++.h>

_DEFS(vtemm,vte)
_PINCLUDE(glibmm/private/object_p.h)

namespace Vte
{
    class Reaper :
        public Glib::Object,
        public paludis::InstantiationPolicy<Reaper, paludis::instantiation_method::SingletonTag>

    {
        friend class paludis::InstantiationPolicy<Reaper, paludis::instantiation_method::SingletonTag>;

        sigc::signal<void, int, int> _signal_child_exited;
        
        _CLASS_GOBJECT(Reaper,VteReaper,VTE_REAPER,Glib::Object,GObject)

        Reaper();

    public:

        int add_child(GPid pid);
        sigc::signal<void, int, int>& signal_child_exited();

    };
}
