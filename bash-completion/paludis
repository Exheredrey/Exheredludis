# Bash completion function for paludis
# Written by Mike Kelly
# vim: set et sw=4 sts=4 ts=4 ft=sh :

# NOTE: This is still a work in progress, don't expect it to work well or
# properly right now.

_paludis() {
    local cur prev opts
    COMPREPLY=()
    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD-1]}

    opts="--query -q \
        --install -i \
        --uninstall -u \
        --uninstall-unused \
        --sync -s \
        --contents -k \
        --owner -o \
        --version -V \
        --info -I \
        --help -h \
        --has-version \
        --best-version \
        --environment-variable \
        --configuration-variable \
        --list-repositories \
        --list-categories \
        --list-packages \
        --list-sets \
        --list-sync-protocols \
        --list-repository-formats \
        --list-dep-tag-categories \
        --update-news \
        --log-level \
        --no-colour \
        --no-color \
        --config-suffix -c \
        --resume-command-template \
        --show-deps -D \
        --show-metadata -M \
        --pretend -p \
        --preserve-world -1 \
        --no-config-protection \
        --debug-build \
        --fetch -f \
        --show-install-reasons \
        --with-unused-dependencies \
        --with-dependencies \
        --dl-reinstall \
        --dl-reinstall-scm \
        --dl-upgrade \
        --dl-installed-deps-pre \
        --dl-installed-deps-runtime \
        --dl-installed-deps-post \
        --dl-uninstalled-deps-pre \
        --dl-uninstalled-deps-runtime \
        --dl-uninstalled-deps-post \
        --dl-circular \
        --dl-fall-back \
        --repository \
        --category \
        --package \
        --set \
        --full-match"

    case "${cur}" in
        -*)
            COMPREPLY=($(compgen -W "${opts}" -- "${cur}"))
            return 0
            ;;
        *)
            case "${prev}" in
                ## Enum operators
                --log-level)
                    COMPREPLY=($(compgen -W "debug qa warning silent" -- "${cur}"))
                    return 0
                    ;;
                --debug-build)
                    COMPREPLY=($(compgen -W "none split internal" -- "${cur}"))
                    return 0
                    ;;
                --show-install-reasons)
                    COMPREPLY=($(compgen -W "none summary full" -- "${cur}"))
                    return 0
                    ;;
                --dl-reinstall)
                    COMPREPLY=($(compgen -W "never always if-use-changed" -- "${cur}"))
                    return 0
                    ;;
                --dl-reinstall-scm)
                    COMPREPLY=($(compgen -W "never always daily weekly" -- "${cur}"))
                    return 0
                    ;;
                --dl-upgrade)
                    COMPREPLY=($(compgen -W "always as-needed" -- "${cur}"))
                    return 0
                    ;;
                --dl-installed-deps-pre|--dl-installed-deps-runtime|--dl-installed-deps-post|--dl-uninstalled-deps-pre|--dl-uninstalled-deps-runtime|--dl-uninstalled-deps-post)
                    COMPREPLY=($(compgen -W "pre pre-or-post post try-post discard" -- "${cur}"))
                    return 0
                    ;;
                --dl-circular)
                    COMPREPLY=($(compgen -W "error discard" -- "${cur}"))
                    return 0
                    ;;
                --dl-fall-back)
                    COMPREPLY=($(compgen -W "as-needed-except-targets as-needed never" -- "${cur}"))
                    return 0
                    ;;
                ## list specifiers
                --repository)
                    COMPREPLY=($(compgen -W "`paludis --no-colour --list-repositories --log-level silent |grep \"^*\" |cut -d\" \" -f2-`" -- "${cur}"))
                    return 0
                    ;;
                --category)
                    COMPREPLY=($(compgen -W "`paludis --no-colour --list-categories --log-level silent |grep \"^*\" |cut -d\" \" -f2-`" -- "${cur}"))
                    return 0
                    ;;
                --package)
                    COMPREPLY=($(compgen -W "`paludis --no-colour --list-packages --log-level silent |grep \"^*\" |cut -d\" \" -f2-`" -- "${cur}"))
                    return 0
                    ;;
                --set)
                    COMPREPLY=($(compgen -W "`paludis --no-colour --list-sets --log-level silent |grep \"^\\*\" |cut -d\" \" -f2-`" -- "${cur}"))
                    return 0
                    ;;
                --owner)
                    COMPREPLY=($(compgen -o filenames -- "${cur}"))
                    return 0
                    ;;
                *)
                    # Do package name completion, etc
                    # For now, just complete on set names and filenames
                    COMPREPLY=($(compgen -W "`paludis --no-colour --list-sets --log-level silent |grep \"^*\" |cut -d\" \" -f2-`" -- "${cur}") \
                    $(compgen -o default -- "${cur}"))
                    return 0
                    ;;
            esac
            ;;
    esac
}
complete -F _paludis paludis
