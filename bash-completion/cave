# Bash completion function for cave
# Written by Mike Kelly
# vim: set et sw=4 sts=4 ts=4 ft=sh :

# Based in part upon 'git' bash completion from git-1.6.4.2

__cave_find_cmd() {
    local w c=1 cmd

    while [[ $c -lt $COMP_CWORD ]] ; do
        w="${COMP_WORDS[c]}"
        case "${w}" in
            --*) ;;
            --help) cmd="help"; break ;;
            *) cmd="${w}"; break ;;
        esac
    done

    echo "${cmd}"
}

__cave_global() {
    case "${prev}" in
        --log-level)
            COMPREPLY=( $(compgen -W "debug qa warning slient" -- "${cur}") )
            ;;
        --environment|-E)
            COMPREPLY=( $(compgen -W "paludis: portage:" -- "${cur}") )
            ;;
        *)
            case "${cur}" in
                -*)
                    COMPREPLY=( $(compgen -W "-E --environment --log-level" -- "${cur}") )
                    ;;
                *)
                    COMPREPLY=( $(compgen -W "$(cave print-commands -a)" -- "${cur}") )
                    ;;
            esac
    esac
}

__cave_help() {
    # only complete once
    if [[ "${prev}" == "help" ]] ; then
        COMPREPLY=( $(compgen -W "$(cave print-commands -a) -a --all" -- "${cur}") )
    fi
}

__cave_sync() {
    COMPREPLY=( $(compgen -W "$(cave print-repositories) --sequential" -- "${cur}") )
}

_cave() {
    local cmd=`_cave_find_cmd` prev=`_get_pword` cur=`_get_cword`

    COMPREPLY=()

    if [[ -z "${cmd}" ]] ; then
        __cave_global
    else
        if [[ "$(type -t "__cave_${cmd}")" == "function" ]] ; then
            "__cave_${cmd}"
        fi
    fi
}
complete -F _cave cave

