#!/bin/bash
# vim: set sw=4 sts=4 et :

make_class_InstallOptions()
{
    key no_config_protect bool
    key fetch_only bool
    key debug_build InstallDebugOption
    key safe_resume bool
    key destination "std::tr1::shared_ptr<Repository>"

    doxygen_comment << "END"
        /**
         * Options for the Repository::install method.
         *
         * \see Repository
         * \ingroup grprepository
         */
END
}

make_class_UninstallOptions()
{
    key no_config_protect bool

    doxygen_comment << "END"
        /**
         * Options for the Repository::uninstall method.
         *
         * \see Repository
         * \ingroup grprepository
         */
END
}

make_class_RepositoryCapabilities()
{
    key installable_interface "RepositoryInstallableInterface *"
    key installed_interface "RepositoryInstalledInterface *"
    key mask_interface "RepositoryMaskInterface *"
    key news_interface "RepositoryNewsInterface *"
    key sets_interface "RepositorySetsInterface *"
    key syncable_interface "RepositorySyncableInterface *"
    key uninstallable_interface "RepositoryUninstallableInterface *"
    key use_interface "RepositoryUseInterface *"
    key world_interface "RepositoryWorldInterface *"
    key mirrors_interface "RepositoryMirrorsInterface *"
    key environment_variable_interface "RepositoryEnvironmentVariableInterface *"
    key provides_interface "RepositoryProvidesInterface *"
    key virtuals_interface "RepositoryVirtualsInterface *"
    key destination_interface "RepositoryDestinationInterface *"
    key contents_interface "RepositoryContentsInterface *"
    key config_interface "RepositoryConfigInterface *"

    doxygen_comment << "END"
        /**
         * Optional interfaces that may be provided by a Repository.
         *
         * \see Repository
         * \ingroup grprepository
         * \nosubgrouping
         */
END

    allow_named_args
}

make_class_RepositoryProvidesEntry()
{
    key virtual_name QualifiedPackageName
    key version VersionSpec
    key provided_by_name QualifiedPackageName

    allow_named_args
    comparison_operators all all
}

make_class_RepositoryVirtualsEntry()
{
    key virtual_name QualifiedPackageName
    key provided_by_atom "std::tr1::shared_ptr<const PackageDepAtom>"

    allow_named_args
    comparison_operators all virtual_name
}

make_class_MergeOptions()
{
    key package PackageDatabaseEntry
    key image_dir FSEntry
    key environment_file FSEntry

    allow_named_args

    doxygen_comment << "END"
        /**
         * Parameters for RepositoryDestinationInterface::merge.
         *
         * \see RepositoryDestinationInterface
         * \ingroup grprepository
         * \nosubgrouping
         */
END
}

