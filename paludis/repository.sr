#!/bin/bash
# vim: set sw=4 sts=4 et :

make_class_RepositoryCapabilities()
{
    visible

    key installed_interface "RepositoryInstalledInterface *"
    key sets_interface "RepositorySetsInterface *"
    key syncable_interface "RepositorySyncableInterface *"
    key use_interface "RepositoryUseInterface *"
    key world_interface "RepositoryWorldInterface *"
    key mirrors_interface "RepositoryMirrorsInterface *"
    key environment_variable_interface "RepositoryEnvironmentVariableInterface *"
    key provides_interface "RepositoryProvidesInterface *"
    key virtuals_interface "RepositoryVirtualsInterface *"
    key make_virtuals_interface "RepositoryMakeVirtualsInterface *"
    key destination_interface "RepositoryDestinationInterface *"
    key licenses_interface "RepositoryLicensesInterface *"
    key e_interface "RepositoryEInterface *"
    key hook_interface "RepositoryHookInterface *"
    key qa_interface "RepositoryQAInterface *"
    key manifest_interface "RepositoryManifestInterface *"

    doxygen_comment << "END"
        /**
         * Optional interfaces that may be provided by a Repository.
         *
         * \see Repository
         * \ingroup grprepository
         * \nosubgrouping
         */
END

    allow_named_args
}

make_class_RepositoryEInterfaceProfilesDescLine()
{
    visible

    key path FSEntry
    key arch std::string
    key status std::string
    key profile "tr1::shared_ptr<ERepositoryProfile>"
    allow_named_args

    doxygen_comment << "END"
        /**
         * A profiles.desc line in a Repository implementing RepositoryEInterface.
         *
         * \see Repository
         * \see RepositoryEInterface
         * \nosubgrouping
         */
END
}

make_class_RepositoryProvidesEntry()
{
    visible

    key virtual_name QualifiedPackageName
    key provided_by "tr1::shared_ptr<const PackageID>"

    allow_named_args

    doxygen_comment << "END"
        /**
         * A provides entry in a Repository implementing RepositoryProvidesInterface.
         *
         * \see Repository
         * \see RepositoryProvidesInterface
         * \nosubgrouping
         */
END
}

make_class_RepositoryVirtualsEntry()
{
    visible

    key virtual_name QualifiedPackageName
    key provided_by_spec "tr1::shared_ptr<const PackageDepSpec>"

    allow_named_args

    doxygen_comment << "END"
        /**
         * A virtuals entry in a Repository implementing RepositoryVirtualsInterface.
         *
         * \see Repository
         * \see RepositoryVirtualsInterface
         * \nosubgrouping
         */
END
}

make_class_MergeOptions()
{
    visible

    key package_id "tr1::shared_ptr<const PackageID>"
    key image_dir FSEntry
    key environment_file FSEntry

    allow_named_args

    doxygen_comment << "END"
        /**
         * Parameters for RepositoryDestinationInterface::merge.
         *
         * \see RepositoryDestinationInterface
         * \ingroup grprepository
         * \nosubgrouping
         */
END
}

